---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-egress
  namespace: logstash
  labels:
    workload.user.cattle.io/workloadselector: deployment-default-logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-logstash

  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-logstash
        app: logstash-egress
    spec:
      terminationGracePeriodSeconds: 3
      volumes:
        - name: pipelines
          configMap:
            name: logstash-egress

      containers:
        # Logstash
        - name: logstash
          image: asia.gcr.io/principal-storm-727/logstash:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: CONFIG_RELOAD_AUTOMATIC
              value: "true"

          ports:
            - name: monitoring-api
              containerPort: 9600
              protocol: TCP

          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9600
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9600
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: "1"
              memory: 4096Mi

          volumeMounts:
            - name: pipelines
              mountPath: "/usr/share/logstash/config/pipelines.yml"
              subPath: pipelines.yml
            - name: pipelines
              mountPath: "/usr/share/logstash/pipeline/"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-egress
  namespace: logstash
data:
  pipelines.yml: |-
    - pipeline.id: output
      path.config: "/usr/share/logstash/pipeline/output.conf"
    - pipeline.id: intake
      path.config: "/usr/share/logstash/pipeline/intake.conf"

  output.conf: |-
    input {
      pipeline {
        address => output
      }
    }
    output {
      kafka {
        codec => json
        topic_id => "logstash-egress"
        bootstrap_servers => "kafka.kafka.svc.cluster.local:9092"
      }
    }

  intake.conf: |-
    input {
      kafka {
        codec => json
        topics => ["logstash-ingress"]
        bootstrap_servers => "kafka.kafka.svc.cluster.local:9092"
      }
    }

    output {
      pipeline {
        send_to => output
      }
    }
